import numpy as np
from pylab import *
data = np.loadtxt('output_r_0.05_matterpower.dat')
data =data.T
import math

x = data[0][0:]
y = data[1][0:]
area = 0
# calculates the mean correalation function
for j in range(len(y)-1):
	area =area + (sin((x[j]+x[j+1])/2.)**2/((x[j]+x[j+1])/2.)**2)*((y[j+1]+y[j])/2.) * (x[j+1]-x[j])

n = 0.007
V = 100.
x = n*V
w = area/(8*pi**3*V**2)
nodata = 100
P = np.zeros(nodata)
k = np.arange(nodata)
# calculates the probability of finding N clusters in a cubic volume V
for N in k:
	P[N] = x**N*(exp(-x))/math.factorial(N)

for N in k:
	P[N] = (x**N*(exp(-x))*(1. - 0.5*x**2*w*((N-N**2)/x**2 + 2*N/x - 1.)))/(math.factorial(N))

plot(k,P) 
show()
